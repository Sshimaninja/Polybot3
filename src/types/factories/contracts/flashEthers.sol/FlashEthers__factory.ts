/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FlashEthers,
  FlashEthersInterface,
} from "../../../contracts/flashEthers.sol/FlashEthers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cde380380610cde8339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610c79806100656000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806310d1e85c14610030575b600080fd5b6100bc6004803603608081101561004657600080fd5b6001600160a01b03823516916020810135916040820135919081019060808101606082013564010000000081111561007d57600080fd5b82018360208201111561008f57600080fd5b803590602001918460018302840111640100000000831117156100b157600080fd5b5090925090506100be565b005b60408051600280825260608083018452926020830190803683370190505090506000806000858560608110156100f357600080fd5b5060408051630dfe168160e01b815281516001600160a01b038435811697506020808601359091169650939092013593503392630dfe168192600480840193829003018186803b15801561014657600080fd5b505afa15801561015a573d6000803e3d6000fd5b505050506040513d602081101561017057600080fd5b50518451859060009061017f57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050336001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156101d857600080fd5b505afa1580156101ec573d6000803e3d6000fd5b505050506040513d602081101561020257600080fd5b505184518590600190811061021357fe5b60200260200101906001600160a01b031690816001600160a01b031681525050610266838560008151811061024457fe5b60200260200101518660018151811061025957fe5b6020026020010151610619565b6001600160a01b0316336001600160a01b0316146102ba576040805162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b8715806102c5575086155b6102ce57600080fd5b6000846001815181106102dd57fe5b60200260200101519050600042603c019050816001600160a01b031663095ea7b385856040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561034f57600080fd5b505af1158015610363573d6000803e3d6000fd5b505050506040513d602081101561037957600080fd5b50600090506103898685896106d9565b60008151811061039557fe5b602002602001015190506000856001600160a01b03166338ed173986848b33886040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561042e578181015183820152602001610416565b505050509050019650505050505050600060405180830381600087803b15801561045757600080fd5b505af115801561046b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561049457600080fd5b81019080805160405193929190846401000000008211156104b457600080fd5b9083019060208201858111156104c957600080fd5b82518660208202830111640100000000821117156104e657600080fd5b82525081516020918201928201910280838360005b838110156105135781810151838201526020016104fb565b5050505090500160405250505060018151811061052c57fe5b6020026020010151905081811161058a576040805162461bcd60e51b815260206004820152601a60248201527f696e73756666696369656e74206f757470757420616d6f756e74000000000000604482015290519081900360640190fd5b6040805163a9059cbb60e01b81526001600160a01b038f81166004830152848403602483015291519186169163a9059cbb916044808201926020929091908290030181600087803b1580156105de57600080fd5b505af11580156105f2573d6000803e3d6000fd5b505050506040513d602081101561060857600080fd5b505050505050505050505050505050565b60008060006106288585610826565b604080516bffffffffffffffffffffffff19606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501206001600160f81b031960688401529a90941b9093166069840152607d8301989098527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b6060600282511015610732576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f504154480000604482015290519081900360640190fd5b815167ffffffffffffffff8111801561074a57600080fd5b50604051908082528060200260200182016040528015610774578160200160208202803683370190505b509050828160018351038151811061078857fe5b60209081029190910101528151600019015b801561081e576000806107d7878660018603815181106107b657fe5b60200260200101518786815181106107ca57fe5b6020026020010151610904565b915091506107f98484815181106107ea57fe5b602002602001015183836109d2565b84600185038151811061080857fe5b602090810291909101015250506000190161079a565b509392505050565b600080826001600160a01b0316846001600160a01b0316141561087a5760405162461bcd60e51b8152600401808060200182810382526025815260200180610bf76025913960400191505060405180910390fd5b826001600160a01b0316846001600160a01b03161061089a57828461089d565b83835b90925090506001600160a01b0382166108fd576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015290519081900360640190fd5b9250929050565b60008060006109138585610826565b509050600080610924888888610619565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b15801561095c57600080fd5b505afa158015610970573d6000803e3d6000fd5b505050506040513d606081101561098657600080fd5b5080516020909101516dffffffffffffffffffffffffffff91821693501690506001600160a01b03878116908416146109c05780826109c3565b81815b90999098509650505050505050565b6000808411610a125760405162461bcd60e51b815260040180806020018281038252602c815260200180610bcb602c913960400191505060405180910390fd5b600083118015610a225750600082115b610a5d5760405162461bcd60e51b8152600401808060200182810382526028815260200180610c1c6028913960400191505060405180910390fd5b6000610a816103e8610a75868863ffffffff610ac216565b9063ffffffff610ac216565b90506000610a9b6103e5610a75868963ffffffff610b2b16565b9050610ab86001828481610aab57fe5b049063ffffffff610b7b16565b9695505050505050565b6000811580610add57505080820282828281610ada57fe5b04145b610b25576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b92915050565b80820382811115610b25576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b80820182811015610b25576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe556e697377617056324c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553556e697377617056324c6962726172793a20494e53554646494349454e545f4c4951554944495459a264697066735822122070ef0384d0c47ff5939e53eef9d72082f21a71c10f6a89b18de6c003985c6eb064736f6c63430006060033";

type FlashEthersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashEthersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashEthers__factory extends ContractFactory {
  constructor(...args: FlashEthersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlashEthers> {
    return super.deploy(_owner, overrides || {}) as Promise<FlashEthers>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): FlashEthers {
    return super.attach(address) as FlashEthers;
  }
  override connect(signer: Signer): FlashEthers__factory {
    return super.connect(signer) as FlashEthers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashEthersInterface {
    return new utils.Interface(_abi) as FlashEthersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashEthers {
    return new Contract(address, _abi, signerOrProvider) as FlashEthers;
  }
}
