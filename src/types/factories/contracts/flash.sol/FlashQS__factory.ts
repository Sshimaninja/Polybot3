/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FlashQS,
  FlashQSInterface,
} from "../../../contracts/flash.sol/FlashQS";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_loanFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_recipientRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token0ID",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1ID",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0ID",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1ID",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
    ],
    name: "flashSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516110e93803806110e98339818101604052608081101561003357600080fd5b508051602080830151604080850151606090950151600380546001600160a01b03199081166001600160a01b038089169190911792839055600480548316828816178155600180548416838c161790819055600280549094168387161793849055865163e6a4390560e01b815290831691810191909152918116602483015293519697949694959294919093169263e6a43905926044808301939192829003018186803b1580156100e357600080fd5b505afa1580156100f7573d6000803e3d6000fd5b505050506040513d602081101561010d57600080fd5b5051600580546001600160a01b039092166001600160a01b031990921691909117905550505050610fa6806101436000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806310d1e85c1461003b578063129c659a146100c9575b600080fd5b6100c76004803603608081101561005157600080fd5b6001600160a01b03823516916020810135916040820135919081019060808101606082013564010000000081111561008857600080fd5b82018360208201111561009a57600080fd5b803590602001918460018302840111640100000000831117156100bc57600080fd5b509092509050610105565b005b6100c7600480360360808110156100df57600080fd5b506001600160a01b038135811691602081013590911690604081013590606001356106d8565b6040805160028082526060808301845292602083019080368337019050509050600085156101335785610135565b845b90506000336001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561017257600080fd5b505afa158015610186573d6000803e3d6000fd5b505050506040513d602081101561019c57600080fd5b50516040805163d21220a760e01b81529051919250600091339163d21220a7916004808301926020929190829003018186803b1580156101db57600080fd5b505afa1580156101ef573d6000803e3d6000fd5b505050506040513d602081101561020557600080fd5b5051600054909150610221906001600160a01b03168383610920565b6001600160a01b0316336001600160a01b031614610275576040805162461bcd60e51b815260206004820152600c60248201526b155b985d5d1a1bdc9a5e995960a21b604482015290519081900360640190fd5b871580610280575086155b61028957600080fd5b87156102955781610297565b805b846000815181106102a457fe5b6001600160a01b039092166020928302919091019091015287156102c857806102ca565b815b846001815181106102d757fe5b6001600160a01b0390921660209283029190910190910152600088156102fd57826102ff565b815b6004805460408051636eb1769f60e11b81526001600160a01b038f811694820194909452918316602483015251929350610e10420192879285169163dd62ed3e916044808301926020929190829003018186803b15801561035f57600080fd5b505afa158015610373573d6000803e3d6000fd5b505050506040513d602081101561038957600080fd5b505110156103de576040805162461bcd60e51b815260206004820152601860248201527f616c6c6f77616e6365206e6f742073756666696369656e740000000000000000604482015290519081900360640190fd5b600480546040805163095ea7b360e01b81526001600160a01b039283169381019390935260248301889052519084169163095ea7b39160448083019260209291908290030181600087803b15801561043557600080fd5b505af1158015610449573d6000803e3d6000fd5b505050506040513d602081101561045f57600080fd5b505060008054610479906001600160a01b031687896109e0565b60008151811061048557fe5b602002602001015190506000600460009054906101000a90046001600160a01b03166001600160a01b03166338ed173988848b33886040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561053357818101518382015260200161051b565b505050509050019650505050505050600060405180830381600087803b15801561055c57600080fd5b505af1158015610570573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561059957600080fd5b81019080805160405193929190846401000000008211156105b957600080fd5b9083019060208201858111156105ce57600080fd5b82518660208202830111640100000000821117156105eb57600080fd5b82525081516020918201928201910280838360005b83811015610618578181015183820152602001610600565b5050505090500160405250505060018151811061063157fe5b60200260200101519050836001600160a01b031663a9059cbb8e8484036040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561069d57600080fd5b505af11580156106b1573d6000803e3d6000fd5b505050506040513d60208110156106c757600080fd5b505050505050505050505050505050565b6000821180156106e85750600081115b610739576040805162461bcd60e51b815260206004820152601f60248201527f616d6f756e742073686f756c642062652067726561746572207468616e203000604482015290519081900360640190fd5b814710156107785760405162461bcd60e51b8152600401808060200182810382526026815260200180610f4b6026913960400191505060405180910390fd5b6003546040805163e6a4390560e01b81526001600160a01b03878116600483015286811660248301529151919092169163e6a43905916044808301926020929190829003018186803b1580156107cd57600080fd5b505afa1580156107e1573d6000803e3d6000fd5b505050506040513d60208110156107f757600080fd5b5051600580546001600160a01b0319166001600160a01b039283161790819055600254604080519184166020808401919091523383830152815180840383018152606084019283905263022c0d9f60e01b90925260648301878152608484018790523060a48501819052608060c48601908152845160e487015284519497969096169563022c0d9f958a958a9593948a9490939261010401919085019080838360005b838110156108b257818101518382015260200161089a565b50505050905090810190601f1680156108df5780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561090157600080fd5b505af1158015610915573d6000803e3d6000fd5b505050505050505050565b600080600061092f8585610b2d565b604080516bffffffffffffffffffffffff19606094851b811660208084019190915293851b81166034830152825160288184030181526048830184528051908501206001600160f81b031960688401529a90941b9093166069840152607d8301989098527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f609d808401919091528851808403909101815260bd909201909752805196019590952095945050505050565b6060600282511015610a39576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f504154480000604482015290519081900360640190fd5b815167ffffffffffffffff81118015610a5157600080fd5b50604051908082528060200260200182016040528015610a7b578160200160208202803683370190505b5090508281600183510381518110610a8f57fe5b60209081029190910101528151600019015b8015610b2557600080610ade87866001860381518110610abd57fe5b6020026020010151878681518110610ad157fe5b6020026020010151610c0b565b91509150610b00848481518110610af157fe5b60200260200101518383610cd9565b846001850381518110610b0f57fe5b6020908102919091010152505060001901610aa1565b509392505050565b600080826001600160a01b0316846001600160a01b03161415610b815760405162461bcd60e51b8152600401808060200182810382526025815260200180610efe6025913960400191505060405180910390fd5b826001600160a01b0316846001600160a01b031610610ba1578284610ba4565b83835b90925090506001600160a01b038216610c04576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015290519081900360640190fd5b9250929050565b6000806000610c1a8585610b2d565b509050600080610c2b888888610920565b6001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610c6357600080fd5b505afa158015610c77573d6000803e3d6000fd5b505050506040513d6060811015610c8d57600080fd5b5080516020909101516dffffffffffffffffffffffffffff91821693501690506001600160a01b0387811690841614610cc7578082610cca565b81815b90999098509650505050505050565b6000808411610d195760405162461bcd60e51b815260040180806020018281038252602c815260200180610ed2602c913960400191505060405180910390fd5b600083118015610d295750600082115b610d645760405162461bcd60e51b8152600401808060200182810382526028815260200180610f236028913960400191505060405180910390fd5b6000610d886103e8610d7c868863ffffffff610dc916565b9063ffffffff610dc916565b90506000610da26103e5610d7c868963ffffffff610e3216565b9050610dbf6001828481610db257fe5b049063ffffffff610e8216565b9695505050505050565b6000811580610de457505080820282828281610de157fe5b04145b610e2c576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b92915050565b80820382811115610e2c576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b80820182811015610e2c576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe556e697377617056324c6962726172793a20494e53554646494349454e545f4f55545055545f414d4f554e54556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954594e6f7420656e6f7567682062616c616e636520746f2065786563757465207468652073776170a264697066735822122009fab936b15af02a7274270e8484e52bcd4c6d9edc4944907187d2bd0c04529664736f6c63430006060033";

type FlashQSConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashQSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashQS__factory extends ContractFactory {
  constructor(...args: FlashQSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _loanFactory: PromiseOrValue<string>,
    _recipientRouter: PromiseOrValue<string>,
    _token0ID: PromiseOrValue<string>,
    _token1ID: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlashQS> {
    return super.deploy(
      _loanFactory,
      _recipientRouter,
      _token0ID,
      _token1ID,
      overrides || {}
    ) as Promise<FlashQS>;
  }
  override getDeployTransaction(
    _loanFactory: PromiseOrValue<string>,
    _recipientRouter: PromiseOrValue<string>,
    _token0ID: PromiseOrValue<string>,
    _token1ID: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _loanFactory,
      _recipientRouter,
      _token0ID,
      _token1ID,
      overrides || {}
    );
  }
  override attach(address: string): FlashQS {
    return super.attach(address) as FlashQS;
  }
  override connect(signer: Signer): FlashQS__factory {
    return super.connect(signer) as FlashQS__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashQSInterface {
    return new utils.Interface(_abi) as FlashQSInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashQS {
    return new Contract(address, _abi, signerOrProvider) as FlashQS;
  }
}
