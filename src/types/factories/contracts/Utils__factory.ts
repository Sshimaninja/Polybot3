/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Utils, UtilsInterface } from "../../contracts/Utils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "truePriceTokenA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "truePriceTokenB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveB",
        type: "uint256",
      },
    ],
    name: "computeProfitMaximizingTrade",
    outputs: [
      {
        internalType: "bool",
        name: "aToB",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103ff806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063fa65315414610030575b600080fd5b61005f6004803603608081101561004657600080fd5b508035906020810135906040810135906060013561007a565b60408051921515835260208301919091528051918290030190f35b60008085610089858786610166565b109150600061009e858563ffffffff61022116565b905060006100f06100eb6100ba846103e863ffffffff61022116565b866100c557896100c7565b8a5b6100e66103e5896100d8578d6100da565b8c5b9063ffffffff61022116565b610166565b61028a565b905060006103e5856101135761010e876103e863ffffffff61022116565b610125565b610125886103e863ffffffff61022116565b8161012c57fe5b0490508082101561014757506000935083925061015d915050565b610157828263ffffffff6102dc16565b93505050505b94509492505050565b6000806000610175868661032c565b915091506000848061018357fe5b868809905082811115610197576001820391505b9182900391816101b5578483816101aa57fe5b04935050505061021a565b848210610209576040805162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a2046554c4c4449565f4f564552464c4f57000000000000604482015290519081900360640190fd5b610214838387610359565b93505050505b9392505050565b600081158061023c5750508082028282828161023957fe5b04145b610284576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b92915050565b600060038211156102cd575080600160028204015b818110156102c7578091506002818285816102b657fe5b0401816102bf57fe5b04905061029f565b506102d7565b81156102d7575060015b919050565b80820382811115610284576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6000808060001984860990508385029250828103915082811015610351576001820391505b509250929050565b6000818103821680838161036957fe5b04925080858161037557fe5b04945080816000038161038457fe5b6002858103808702820302808702820302808702820302808702820302808702820302808702820302958602900390940293046001019390930293909301029291505056fea2646970667358221220f370dc939ce30abd046c5db430bbc8595d8b96b3488156d38dc4344fa9df4c0464736f6c63430006060033";

type UtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Utils__factory extends ContractFactory {
  constructor(...args: UtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Utils> {
    return super.deploy(overrides || {}) as Promise<Utils>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Utils {
    return super.attach(address) as Utils;
  }
  override connect(signer: Signer): Utils__factory {
    return super.connect(signer) as Utils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UtilsInterface {
    return new utils.Interface(_abi) as UtilsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Utils {
    return new Contract(address, _abi, signerOrProvider) as Utils;
  }
}
